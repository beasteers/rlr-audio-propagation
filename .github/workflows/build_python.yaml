name: Build and Test Python Bindings

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
    paths:
      - '**.py'
      - 'src/**'
      - 'RLRAudioPropagationPkg/**'
      - 'setup.py'
      - 'pyproject.toml'
  pull_request:
    branches:
      - main
    paths:
      - '**.py'
      - 'src/**'
      - 'RLRAudioPropagationPkg/**'
      - 'setup.py'
      - 'pyproject.toml'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel pybind11

    - name: Build Python bindings
      run: |
        python setup.py bdist_wheel

    - name: Upload Python bindings
      uses: actions/upload-artifact@v2
      with:
        name: python-bindings-${{ matrix.python-version }}
        path: dist/*.whl

    - name: Install built wheel
      run: |
        pip install dist/*.whl

    - name: Run tests
      run: |
        pip install pytest trimesh
        pytest

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
        name: python-bindings-*
        path: dist/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: dist/*.whl

    # - name: Publish to PyPI
    #   uses: pypa/gh-action-pypi-publish@v1.4.2
    #   with:
    #     user: ${{ secrets.PYPI_USERNAME }}
    #     password: ${{ secrets.PYPI_PASSWORD }}
    #     packages_dir: dist/